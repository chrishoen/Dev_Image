# copy the input image to the output image.
output_image = input_image_c.clone()

# loop through all of the pixels in the input image
# to filter the high pixels.
for xpixel in input_image_c:
   if input_image_c.at(xpixel) != 0
      filter_high_pixel(xpixel)
      
# filter a high pixel based on nearest neighbor rules.
def filter_high_pixel(x):
   # calculate class variables.
   calculate_classes(x)

   # RULE 1.
   # If the slice plane is not on a horizontal edge.
   if (class_s == 0x01):
      return 

   # RULE 2.
   # If any plane is not classified.
   if (class_s == 0xee or class_r == 0xee or class_c == 0xee):
      return 

   # RULE 3.
   # If any plane class is 4 or 5.
   if (class_s >= 0x40 or class_r >= 0x40 or class_c >= 0x40):
      output_image.at(x) = parms.hc1
      return 

   # RULE 4.
   # Any other.
   return 

