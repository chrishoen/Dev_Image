#pragma once
/*==============================================================================
image stack filter
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <random>

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class encalsulates a future variable.

class FutureVar
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members:

   bool mValid;
   int  mValue;
   bool mCertain;
   int  mPlanValue;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members:

   std::mt19937 mRandomGenerator;
   std::uniform_int_distribution<> mRandomDistribution;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   FutureVar();
   void reset();
   void show();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Plan the variable.
   void doPlan(bool aCertain,int aPlanValue);

   // Launch the variable.
   void doLaunch();

   // Update the variable.
   void doUpdate();

};

//******************************************************************************
//******************************************************************************
//******************************************************************************




