#pragma once

/*==============================================================================
Nearest neighbor rule filter.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <opencv2/core/core.hpp>

#include "svImageWrapper.h"
#include "svSimMorphParms.h"

namespace SV
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This is an image filter that filters pixels according to a set of rules
// that pertain to the nearest neighbors of the pixel.
//

class SimMorphFilter
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Parameters. These are read from a parms file.

   SimMorphParms* mP;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members. Variables, according to the main diagram.

   // Images.
   ImageWrapper mInput;
   ImageWrapper mOutput;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   SimMorphFilter();
   SimMorphFilter(SimMorphParms* aParms);
   void initialize(SimMorphParms* aParms);
   void reset();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Initialize a first image.
   void doInitializeImage(
      cv::Mat&       aOutput);             // Output

   // Filter an image according to the parms.
   void doFilterImage(
      cv::Mat&       aInput,               // Input
      cv::Mat&       aOutput);             // Output

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Filter a pixel.
   void doFilterHighPixel(RCIndex aX);
};


//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


