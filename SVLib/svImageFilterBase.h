#pragma once

/*==============================================================================
Base class for image filters.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <opencv2/core/core.hpp>

#include "svImageFilterParms.h"

namespace SV
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This is a base class for image filters.
// Specific inheritors provide specific filter implementations.
//
// It provides a common interface for specific inheritors and a parameters
// member variable.

class ImageFilterBase
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Parameters. These are read from a parms file.

   ImageFilterParms* mP;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Filter an image according to the parms.
   // This is supplied by inheriting classes.
   virtual void doFilterImage(
      cv::Mat&       aInput,               // Input
      cv::Mat&       aOutput) = 0;         // Output

};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


